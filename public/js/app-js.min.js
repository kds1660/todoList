var listModule = angular.module('listModule', []);
var loginModule = angular.module('loginModule', []);
listModule.controller('listController', ['$scope', '$rootScope', 'toastr', 'moment', 'listServices', 'loginServices', function ($scope, $rootScope, toastr, moment, listServices, loginServices) {
    $scope.list = {
        done: [],
        todo: []
    };

    listServices.apiRequest.get().$promise.then(function (response) {
        for (var i = 0; i < response.length; i++) {
            response[i].date=listServices.toLocalTime(response[i].date);
            if (response[i].executed) {
                $scope.list.done.push(response[i]);
            } else {
                $scope.list.todo.push(response[i]);
            }
        }
    }, function (response) {
    });

    $scope.executeTask = function ($index) {
        listServices.apiRequest.save({
            task: $scope.list.todo[$index].id,
            execute: 1
        }).$promise.then(function (response) {
            toastr.success(response.message, 'Success');
            $scope.list.todo[$index].executed = true;
            $scope.list.done.push($scope.list.todo[$index]);
            $scope.list.todo.splice($index, 1);
        }, function (response) {
            toastr.error(response.message, 'Error');
        });
    };

    $scope.removeTask = function ($index) {
        listServices.apiRequest.delete({task: $scope.list.done[$index].id}).$promise.then(function (response) {
            toastr.success(response.message, 'Success');
            $scope.list.done.splice($index, 1);
        }, function (response) {
            toastr.error(response.message, 'Error');
        });
    };

    $scope.restoreTask = function ($index) {
        listServices.apiRequest.save({
            task: $scope.list.done[$index].id,
            execute: 0
        }).$promise.then(function (response) {
            toastr.success(response.message, 'Success');
            $scope.list.done[$index].executed = false;
            $scope.list.todo.push($scope.list.done[$index]);
            $scope.list.done.splice($index, 1)
        }, function (response) {
            toastr.error(response.message, 'Error');
        });
    };

    $scope.addTask = function () {
        var newTask = {
            text: angular.element(document.querySelector('#task')).val(),
            date: new Date()
        };
        listServices.apiRequest.save(newTask).$promise.then(function (response) {
            newTask.id = response.id;
            newTask.date=listServices.toLocalTime(newTask.date);
            $scope.list.todo.push(newTask);
            angular.element(document.querySelector('#task')).val('');
            toastr.success(response.message, 'Success');
        }, function (response) {
            toastr.error(response.message, 'Error');
        });

    };

    $scope.editTask = function ($index) {
        //show modal window for action
        $scope.editText = {
            task: $scope.list.todo[$index].id,
            text:$scope.list.todo[$index].text
        };
        listServices.editElement($scope).then(function () {
            listServices.apiRequest.update($scope.editText).$promise.then(function (response) {
                toastr.success(response.message, 'Success');
                $scope.list.todo[$index].text=$scope.editText.text;
            }, function (response) {
                toastr.error(response.message, 'Error');
            });
        }, function () {
        });
    };

    $scope.filterList = function () {
        var filterValue = angular.element(document.querySelector('.filter')).val();

        if (filterValue !== '') {
            angular.forEach(angular.element(document.querySelectorAll('li')), function (elm) {
                var text = elm.querySelector('span').innerText;

                if (text.substr(0, filterValue.length) !== filterValue) {
                    angular.element(elm).css('display', 'none');
                } else {
                    angular.element(elm).css('display', 'block')
                }
            })
        } else {
            angular.element(document.querySelectorAll('li')).css('display', 'block');
        }
    };

    $scope.sortList = function (value) {
        function sortByProp (value) {
            return function (a,b) {
                if (a[value]<b[value]) {return -1}
                if (a[value]>b[value]) {return 1}
                return 0
            }
        }
        $scope.list.done.sort(sortByProp(value));
        $scope.list.todo.sort(sortByProp(value));
    }
}]);

loginModule.controller('loginController', ['$scope', '$rootScope', '$state', 'toastr', 'loginServices', function ($scope, $rootScope, $state, toastr, loginServices) {
    $scope.loginUser = {};

    loginServices.apiRequest.get({user: 'logged'}).$promise.then(function (response) {
        loginServices.setUser(response.message);
        $scope.userName = loginServices.getUser();

        if (loginServices.getUser()) {
            $state.go('logged');
        } else {
            $state.go('login');
        }
    });

    $scope.login = function () {
        loginServices.apiRequest.save($scope.loginUser).$promise.then(function (response) {
            toastr.success(response.message, 'Success');
            $state.go('logged');

        }, function (response) {
            toastr.error(response.data.message, 'Error');
        });
    };

    $scope.register = function () {

        if (!$scope.loginUser.name || !$scope.loginUser.password) {
            toastr.error('Set name/password', 'Error');
        } else {
            loginServices.apiRequest.update($scope.loginUser).$promise.then(function (response) {
                toastr.success(response.message, 'Success');
            }, function (response) {
                toastr.error(response.data.message, 'Error');
            })
        }
    };
    $scope.logout = function () {
        loginServices.apiRequest.get({user: 'logout'}).$promise.then(function (response) {
            toastr.success(response.message, 'Success');
            loginServices.setUser('');
            $state.go('login');
        }, function (response) {
            toastr.error(response.data.message, 'Error');
        })
    };
}]);

listModule.factory('listServices', ['$resource','$http', '$q', '$uibModal','moment', function ($resource,$http, $q, $uibModal,moment) {
    return {
        apiRequest: $resource('/api/tasks/:task', {task: '@task'}, {
            'update': {
                method: 'put'
            },
            'get': {
                isArray: true
            }
        }),
        editElement: function ($scope) {
            var deferred = $q.defer();
            $http.get('templates/editModal.html').then(function (response) {
                $uibModal.open({
                    animation: true,
                    template: response.data,
                    scope:$scope
                }).result.then(function () {

                    deferred.resolve();
                }, function () {
                    deferred.reject();
                });
            });
            return deferred.promise;
        },
        toLocalTime:function (date) {
            return moment.utc(date).local().format('MMMM do YYYY, h:mm:ss a')
        }
    }
}]);
loginModule.factory('loginServices', ['$resource', function ($resource) {
    var loggedUser = '';
    return {
        apiRequest: $resource('/api/users/:user', {user: '@user'}, {
            'update': {
                method: 'put'
            }
        }),
        setUser: function (user) {
            loggedUser = user;
        },
        getUser: function () {
            return loggedUser;
        }
    }
}]);
listModule.directive("listElement", function () {
    return {
        restrict: "E",
        templateUrl: "templates/ListElement.html",
        scope: false
    }
});
loginModule.directive("loginElement", function () {
    return {
        restrict: "E",
        templateUrl: "templates/login.html",
        scope: false,
        link: function (scope, elem, attrs) {

            elem[0].addEventListener('keyup', function (e) {
                var key = e.which || e.keyCode;

                if (key == 13) {
                    scope.login();
                }
            })
        }
    }
});
angular.module('listRoutes', ['ui.router'])
    .config(['$stateProvider', '$urlRouterProvider',
        function ($stateProvider, $urlRouterProvider) {
            $stateProvider
                .state('login', {
                    url: '/login',
                    views: {
                        '': {template: ''},
                        'login@login': {
                            template: '<login-element></login-element>',
                            controller: 'loginController'
                        },
                        'list@login': {
                            template: '<h1>Not Logged</h1>'
                        }
                    }
                })
                .state('logged', {
                    url: '/logged',
                    views: {
                        '': {template: ''},
                        'login@logged': {
                            templateUrl: 'templates/logged.html',
                            controller: 'loginController'
                        },
                        'list@logged': {
                            templateUrl: 'templates/list.html',
                            controller: 'listController'
                        }
                    }
                });
            $urlRouterProvider.otherwise("/login");
        }]);
'use strict';

/* App Module */

var app = angular.module('todoListApp', [
    'ui.router',
    'ui.bootstrap',
    'angularMoment',
    'ngAnimate',
    'toastr',
    'ngResource',
    'listRoutes',
    'listModule',
    'loginModule'
]);